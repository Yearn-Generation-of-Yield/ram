{
  "address": "0x229326aA44F0ed3611Fde6e1197F4dF6059727a5",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "calculateAmountsAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "transferToAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "transferToFeeDistributorAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "noFee",
          "type": "bool"
        }
      ],
      "name": "editNoFeeList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feePercentX100",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_RAMAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_YGYAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ramVault",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTotalSupplyOfLPTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "noFeeList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_feeMultiplier",
          "type": "uint8"
        }
      ],
      "name": "setFeeMultiplier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "finneyAmnt",
          "type": "uint256"
        }
      ],
      "name": "setMinimumLiquidityToTriggerStop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_pause",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ramVaultAddress",
          "type": "address"
        }
      ],
      "name": "setRamVaultAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sync",
      "outputs": [
        {
          "internalType": "bool",
          "name": "lastIsMint",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "lpTokenBurn",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapFactory",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x0190bbae2c6f4a8d1bbb4d57a260bc84307b4a583f85b42c39b0a5a592b0db37",
  "receipt": {
    "to": null,
    "from": "0x117C8f87Cc495b29bdDB20E2a54c6F4DacDdAb5C",
    "contractAddress": "0x229326aA44F0ed3611Fde6e1197F4dF6059727a5",
    "transactionIndex": 0,
    "gasUsed": "1049442",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x3a4db8c8d2641bbab6b09fc18936e6290d992f022a41a918ff2c8d4d5a1fc3b8",
    "transactionHash": "0x0190bbae2c6f4a8d1bbb4d57a260bc84307b4a583f85b42c39b0a5a592b0db37",
    "logs": [],
    "blockNumber": 22672305,
    "cumulativeGasUsed": "1049442",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "bc1a585417435c540b4e50cc1976e9a1",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateAmountsAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"transferToAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transferToFeeDistributorAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"noFee\",\"type\":\"bool\"}],\"name\":\"editNoFeeList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentX100\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_RAMAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_YGYAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ramVault\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTotalSupplyOfLPTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"noFeeList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_feeMultiplier\",\"type\":\"uint8\"}],\"name\":\"setFeeMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"finneyAmnt\",\"type\":\"uint256\"}],\"name\":\"setMinimumLiquidityToTriggerStop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ramVaultAddress\",\"type\":\"address\"}],\"name\":\"setRamVaultAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"lastIsMint\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"lpTokenBurn\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapFactory\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FeeApprover.sol\":\"FeeApprover\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"content\":\"pragma solidity ^0.6.0;\\nimport \\\"../Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract ContextUpgradeSafe is Initializable {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n\\n\\n    }\\n\\n\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\"},\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"content\":\"pragma solidity >=0.4.24 <0.7.0;\\n\\n\\n/**\\n * @title Initializable\\n *\\n * @dev Helper contract to support initializer functions. To use it, replace\\n * the constructor with a function that has the `initializer` modifier.\\n * WARNING: Unlike constructors, initializer functions must be manually\\n * invoked. This applies both to deploying an Initializable contract, as well\\n * as extending an Initializable contract via inheritance.\\n * WARNING: When used with inheritance, manual care must be taken to not invoke\\n * a parent initializer twice, or ensure that all initializers are idempotent,\\n * because this is not dealt with automatically as with constructors.\\n */\\ncontract Initializable {\\n\\n  /**\\n   * @dev Indicates that the contract has been initialized.\\n   */\\n  bool private initialized;\\n\\n  /**\\n   * @dev Indicates that the contract is in the process of being initialized.\\n   */\\n  bool private initializing;\\n\\n  /**\\n   * @dev Modifier to use in the initializer function of a contract.\\n   */\\n  modifier initializer() {\\n    require(initializing || isConstructor() || !initialized, \\\"Contract instance has already been initialized\\\");\\n\\n    bool isTopLevelCall = !initializing;\\n    if (isTopLevelCall) {\\n      initializing = true;\\n      initialized = true;\\n    }\\n\\n    _;\\n\\n    if (isTopLevelCall) {\\n      initializing = false;\\n    }\\n  }\\n\\n  /// @dev Returns true if and only if the function is running in the constructor\\n  function isConstructor() private view returns (bool) {\\n    // extcodesize checks the size of the code stored in an address, and\\n    // address returns the current address. Since the code is still not\\n    // deployed when running a constructor, any checks on its code size will\\n    // yield zero, making it an effective way to detect if a contract is\\n    // under construction or not.\\n    address self = address(this);\\n    uint256 cs;\\n    assembly { cs := extcodesize(self) }\\n    return cs == 0;\\n  }\\n\\n  // Reserved storage space to allow for layout changes in the future.\\n  uint256[50] private ______gap;\\n}\\n\",\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\"},\"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\nimport \\\"../Initializable.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract OwnableUpgradeSafe is Initializable, ContextUpgradeSafe {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n\\n\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n\\n    }\\n\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x04a69a78363214b4e3055db8e620bed222349f0c81e9d1cbe769eb849b69b73f\"},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\"},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\"},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\"},\"contracts/FeeApprover.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\nimport \\\"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\\\"; // for WETH\\nimport \\\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\\\";\\nimport \\\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\\\";\\n\\n\\ncontract FeeApprover is OwnableUpgradeSafe {\\n    using SafeMath for uint256;\\n\\n    function initialize(\\n        address _RAMAddress,\\n        address _YGYAddress,\\n        address _uniswapFactory,\\n        address _ramVault\\n    ) public initializer {\\n        OwnableUpgradeSafe.__Ownable_init();\\n\\n        // Setup system addresses\\n        ramTokenAddress = _RAMAddress;\\n        ygyTokenAddress = _YGYAddress;\\n        tokenUniswapPair = IUniswapV2Factory(_uniswapFactory).getPair(\\n            ygyTokenAddress,\\n            ramTokenAddress\\n        );\\n\\n        // Fee perrcents\\n        feePercentX100 = 10; // 1%\\n        paused = true; // We start paused until sync post LGE happens.\\n\\n        _editNoFeeList(_ramVault, true); // ramvault proxy\\n        _editNoFeeList(tokenUniswapPair, true);\\n\\n        sync();\\n        minFinney = 5000;\\n    }\\n\\n    address tokenUniswapPair;\\n    IUniswapV2Factory public uniswapFactory;\\n    address ramTokenAddress;\\n    address ygyTokenAddress;\\n    address ramVaultAddress;\\n    uint8 public feePercentX100; // max 255 = 25.5% artificial clamp\\n    uint256 public lastTotalSupplyOfLPTokens;\\n    bool paused;\\n    uint256 private lastSupplyOfRamInPair;\\n    uint256 private lastSupplyOfYgyInPair;\\n    mapping(address => bool) public noFeeList;\\n\\n    // RAM token is pausable\\n    function setPaused(bool _pause) public onlyOwner {\\n        paused = _pause;\\n        sync();\\n    }\\n\\n    function setFeeMultiplier(uint8 _feeMultiplier) public onlyOwner {\\n        feePercentX100 = _feeMultiplier;\\n    }\\n\\n    function setRamVaultAddress(address _ramVaultAddress) public onlyOwner {\\n        ramVaultAddress = _ramVaultAddress;\\n        noFeeList[ramVaultAddress] = true;\\n    }\\n\\n    function editNoFeeList(address _address, bool noFee) public onlyOwner {\\n        _editNoFeeList(_address, noFee);\\n    }\\n\\n    function _editNoFeeList(address _address, bool noFee) internal {\\n        noFeeList[_address] = noFee;\\n    }\\n\\n    uint256 minFinney; // 2x for $ liq amount\\n\\n    function setMinimumLiquidityToTriggerStop(uint256 finneyAmnt)\\n        public\\n        onlyOwner\\n    {\\n        // 1000 = 1eth\\n        minFinney = finneyAmnt;\\n    }\\n\\n    function sync() public returns (bool lastIsMint, bool lpTokenBurn) {\\n        // This will update the state of lastIsMint, when called publically\\n        // So we have to sync it before to the last LP token value.\\n        uint256 _LPSupplyOfPairTotal = IERC20(tokenUniswapPair).totalSupply();\\n        lpTokenBurn = lastTotalSupplyOfLPTokens > _LPSupplyOfPairTotal;\\n        lastTotalSupplyOfLPTokens = _LPSupplyOfPairTotal;\\n\\n        uint256 _balanceYGY = IERC20(ygyTokenAddress).balanceOf(\\n            tokenUniswapPair\\n        );\\n        uint256 _balanceRAM = IERC20(ramTokenAddress).balanceOf(\\n            tokenUniswapPair\\n        );\\n\\n        // Do not block after small liq additions\\n        // you can only withdraw 350$ now with front running\\n        // And cant front run buys with liq add ( adversary drain )\\n        lastIsMint =\\n            _balanceRAM > lastSupplyOfRamInPair &&\\n            _balanceYGY > lastSupplyOfYgyInPair.add(minFinney.mul(1 finney));\\n\\n        lastSupplyOfRamInPair = _balanceRAM;\\n        lastSupplyOfYgyInPair = _balanceYGY;\\n    }\\n\\n    function calculateAmountsAfterFee(\\n        address sender,\\n        address recipient, // unusued maybe use din future\\n        uint256 amount\\n    )\\n        public\\n        returns (\\n            uint256 transferToAmount,\\n            uint256 transferToFeeDistributorAmount\\n        )\\n    {\\n        require(paused == false, \\\"FEE APPROVER: Transfers Paused\\\");\\n        (bool lastIsMint, bool lpTokenBurn) = sync();\\n\\n        if (sender == tokenUniswapPair) {\\n            // This will block buys that are immidietly after a mint. Before sync is called/\\n            // Deployment of this should only happen after router deployment\\n            // And addition of sync to all RamVault transactions to remove 99.99% of the cases.\\n            require(lastIsMint == false, \\\"Liquidity withdrawals forbidden\\\");\\n            require(lpTokenBurn == false, \\\"Liquidity withdrawals forbidden\\\");\\n        }\\n\\n        if (noFeeList[sender]) {\\n            // Dont have a fee when ramvault is sending, or infinite loop\\n // And when pair is sending ( buys are happening, no tax on it)\\n            transferToFeeDistributorAmount = 0;\\n            transferToAmount = amount;\\n        } else {\\n            transferToFeeDistributorAmount = amount.mul(feePercentX100).div(\\n                1000\\n            );\\n            transferToAmount = amount.sub(transferToFeeDistributorAmount);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaa40667d07229a32aae94eb36b5ca461b9ebd6b6eb1cfaa3790c3708d0e24d71\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611206806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638aee4cfe11610097578063d5b71d5b11610066578063d5b71d5b14610284578063f2fde38b146102a1578063f8c8765e146102c7578063fff6cae914610305576100f5565b80638aee4cfe1461021e5780638bdb2afa1461023e5780638da5cb5b1461026257806392f619301461026a576100f5565b806351d271be116100d357806351d271be14610188578063546160c6146101b6578063715018a6146101dc5780638aa1ff70146101e4576100f5565b806316c38b3c146100fa578063301a58011461011b5780633b4e71ad1461016a575b600080fd5b6101196004803603602081101561011057600080fd5b50351515610328565b005b6101516004803603606081101561013157600080fd5b506001600160a01b0381358116916020810135909116906040013561039b565b6040805192835260208301919091528051918290030190f35b610172610530565b6040805160ff9092168252519081900360200190f35b6101196004803603604081101561019e57600080fd5b506001600160a01b0381351690602001351515610540565b610119600480360360208110156101cc57600080fd5b50356001600160a01b03166105a6565b610119610638565b61020a600480360360208110156101fa57600080fd5b50356001600160a01b03166106da565b604080519115158252519081900360200190f35b6101196004803603602081101561023457600080fd5b503560ff166106ef565b610246610767565b604080516001600160a01b039092168252519081900360200190f35b610246610776565b610272610785565b60408051918252519081900360200190f35b6101196004803603602081101561029a57600080fd5b503561078b565b610119600480360360208110156102b757600080fd5b50356001600160a01b03166107e8565b610119600480360360808110156102dd57600080fd5b506001600160a01b0381358116916020810135821691604082013581169160600135166108e1565b61030d610aaa565b60408051921515835290151560208301528051918290030190f35b610330610c7f565b6065546001600160a01b03908116911614610380576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b609d805460ff1916821515179055610396610aaa565b505050565b609d54600090819060ff16156103f8576040805162461bcd60e51b815260206004820152601e60248201527f46454520415050524f5645523a205472616e7366657273205061757365640000604482015290519081900360640190fd5b600080610403610aaa565b60975491935091506001600160a01b03888116911614156104c4578115610471576040805162461bcd60e51b815260206004820152601f60248201527f4c6971756964697479207769746864726177616c7320666f7262696464656e00604482015290519081900360640190fd5b80156104c4576040805162461bcd60e51b815260206004820152601f60248201527f4c6971756964697479207769746864726177616c7320666f7262696464656e00604482015290519081900360640190fd5b6001600160a01b038716600090815260a0602052604090205460ff16156104f15760009250849350610526565b609b54610517906103e890610511908890600160a01b900460ff16610c83565b90610ce5565b92506105238584610d27565b93505b5050935093915050565b609b54600160a01b900460ff1681565b610548610c7f565b6065546001600160a01b03908116911614610598576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b6105a28282610d69565b5050565b6105ae610c7f565b6065546001600160a01b039081169116146105fe576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b609b80546001600160a01b0319166001600160a01b03928316179081905516600090815260a060205260409020805460ff19166001179055565b610640610c7f565b6065546001600160a01b03908116911614610690576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b60a06020526000908152604090205460ff1681565b6106f7610c7f565b6065546001600160a01b03908116911614610747576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b609b805460ff909216600160a01b0260ff60a01b19909216919091179055565b6098546001600160a01b031681565b6065546001600160a01b031690565b609c5481565b610793610c7f565b6065546001600160a01b039081169116146107e3576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b60a155565b6107f0610c7f565b6065546001600160a01b03908116911614610840576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b6001600160a01b0381166108855760405162461bcd60e51b815260040180806020018281038252602681526020018061113c6026913960400191505060405180910390fd5b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff16806108fa57506108fa610d94565b80610908575060005460ff16155b6109435760405162461bcd60e51b815260040180806020018281038252602e8152602001806111a3602e913960400191505060405180910390fd5b600054610100900460ff1615801561096e576000805460ff1961ff0019909116610100171660011790555b610976610d9a565b609980546001600160a01b038088166001600160a01b03199283161792839055609a8054888316931692909217918290556040805163e6a4390560e01b81529282166004840152928116602483015291519185169163e6a4390591604480820192602092909190829003018186803b1580156109f157600080fd5b505afa158015610a05573d6000803e3d6000fd5b505050506040513d6020811015610a1b57600080fd5b5051609780546001600160a01b0319166001600160a01b03909216919091179055609b805460ff60a01b1916600560a11b179055609d805460ff19166001908117909155610a6a908390610d69565b609754610a81906001600160a01b03166001610d69565b610a89610aaa565b505061138860a1558015610aa3576000805461ff00191690555b5050505050565b6000806000609760009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610afd57600080fd5b505afa158015610b11573d6000803e3d6000fd5b505050506040513d6020811015610b2757600080fd5b5051609c805490829055609a54609754604080516370a0823160e01b81526001600160a01b039283166004820152905193851096509394506000939116916370a0823191602480820192602092909190829003018186803b158015610b8b57600080fd5b505afa158015610b9f573d6000803e3d6000fd5b505050506040513d6020811015610bb557600080fd5b5051609954609754604080516370a0823160e01b81526001600160a01b039283166004820152905193945060009391909216916370a08231916024808301926020929190829003018186803b158015610c0d57600080fd5b505afa158015610c21573d6000803e3d6000fd5b505050506040513d6020811015610c3757600080fd5b5051609e5490915081118015610c6c575060a154610c6990610c609066038d7ea4c68000610c83565b609f5490610e4c565b82115b609e91909155609f919091559391925050565b3390565b600082610c9257506000610cdf565b82820282848281610c9f57fe5b0414610cdc5760405162461bcd60e51b81526004018080602001828103825260218152602001806111626021913960400191505060405180910390fd5b90505b92915050565b6000610cdc83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610ea6565b6000610cdc83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f48565b6001600160a01b0391909116600090815260a060205260409020805460ff1916911515919091179055565b303b1590565b600054610100900460ff1680610db35750610db3610d94565b80610dc1575060005460ff16155b610dfc5760405162461bcd60e51b815260040180806020018281038252602e8152602001806111a3602e913960400191505060405180910390fd5b600054610100900460ff16158015610e27576000805460ff1961ff0019909116610100171660011790555b610e2f610fa2565b610e37611042565b8015610e49576000805461ff00191690555b50565b600082820183811015610cdc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008183610f325760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ef7578181015183820152602001610edf565b50505050905090810190601f168015610f245780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610f3e57fe5b0495945050505050565b60008184841115610f9a5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610ef7578181015183820152602001610edf565b505050900390565b600054610100900460ff1680610fbb5750610fbb610d94565b80610fc9575060005460ff16155b6110045760405162461bcd60e51b815260040180806020018281038252602e8152602001806111a3602e913960400191505060405180910390fd5b600054610100900460ff16158015610e37576000805460ff1961ff0019909116610100171660011790558015610e49576000805461ff001916905550565b600054610100900460ff168061105b575061105b610d94565b80611069575060005460ff16155b6110a45760405162461bcd60e51b815260040180806020018281038252602e8152602001806111a3602e913960400191505060405180910390fd5b600054610100900460ff161580156110cf576000805460ff1961ff0019909116610100171660011790555b60006110d9610c7f565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610e49576000805461ff00191690555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a264697066735822122012511d540d430da4106b2dd8287443bbaced523af39345aa0e24763402b547ad64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80638aee4cfe11610097578063d5b71d5b11610066578063d5b71d5b14610284578063f2fde38b146102a1578063f8c8765e146102c7578063fff6cae914610305576100f5565b80638aee4cfe1461021e5780638bdb2afa1461023e5780638da5cb5b1461026257806392f619301461026a576100f5565b806351d271be116100d357806351d271be14610188578063546160c6146101b6578063715018a6146101dc5780638aa1ff70146101e4576100f5565b806316c38b3c146100fa578063301a58011461011b5780633b4e71ad1461016a575b600080fd5b6101196004803603602081101561011057600080fd5b50351515610328565b005b6101516004803603606081101561013157600080fd5b506001600160a01b0381358116916020810135909116906040013561039b565b6040805192835260208301919091528051918290030190f35b610172610530565b6040805160ff9092168252519081900360200190f35b6101196004803603604081101561019e57600080fd5b506001600160a01b0381351690602001351515610540565b610119600480360360208110156101cc57600080fd5b50356001600160a01b03166105a6565b610119610638565b61020a600480360360208110156101fa57600080fd5b50356001600160a01b03166106da565b604080519115158252519081900360200190f35b6101196004803603602081101561023457600080fd5b503560ff166106ef565b610246610767565b604080516001600160a01b039092168252519081900360200190f35b610246610776565b610272610785565b60408051918252519081900360200190f35b6101196004803603602081101561029a57600080fd5b503561078b565b610119600480360360208110156102b757600080fd5b50356001600160a01b03166107e8565b610119600480360360808110156102dd57600080fd5b506001600160a01b0381358116916020810135821691604082013581169160600135166108e1565b61030d610aaa565b60408051921515835290151560208301528051918290030190f35b610330610c7f565b6065546001600160a01b03908116911614610380576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b609d805460ff1916821515179055610396610aaa565b505050565b609d54600090819060ff16156103f8576040805162461bcd60e51b815260206004820152601e60248201527f46454520415050524f5645523a205472616e7366657273205061757365640000604482015290519081900360640190fd5b600080610403610aaa565b60975491935091506001600160a01b03888116911614156104c4578115610471576040805162461bcd60e51b815260206004820152601f60248201527f4c6971756964697479207769746864726177616c7320666f7262696464656e00604482015290519081900360640190fd5b80156104c4576040805162461bcd60e51b815260206004820152601f60248201527f4c6971756964697479207769746864726177616c7320666f7262696464656e00604482015290519081900360640190fd5b6001600160a01b038716600090815260a0602052604090205460ff16156104f15760009250849350610526565b609b54610517906103e890610511908890600160a01b900460ff16610c83565b90610ce5565b92506105238584610d27565b93505b5050935093915050565b609b54600160a01b900460ff1681565b610548610c7f565b6065546001600160a01b03908116911614610598576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b6105a28282610d69565b5050565b6105ae610c7f565b6065546001600160a01b039081169116146105fe576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b609b80546001600160a01b0319166001600160a01b03928316179081905516600090815260a060205260409020805460ff19166001179055565b610640610c7f565b6065546001600160a01b03908116911614610690576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b60a06020526000908152604090205460ff1681565b6106f7610c7f565b6065546001600160a01b03908116911614610747576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b609b805460ff909216600160a01b0260ff60a01b19909216919091179055565b6098546001600160a01b031681565b6065546001600160a01b031690565b609c5481565b610793610c7f565b6065546001600160a01b039081169116146107e3576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b60a155565b6107f0610c7f565b6065546001600160a01b03908116911614610840576040805162461bcd60e51b81526020600482018190526024820152600080516020611183833981519152604482015290519081900360640190fd5b6001600160a01b0381166108855760405162461bcd60e51b815260040180806020018281038252602681526020018061113c6026913960400191505060405180910390fd5b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff16806108fa57506108fa610d94565b80610908575060005460ff16155b6109435760405162461bcd60e51b815260040180806020018281038252602e8152602001806111a3602e913960400191505060405180910390fd5b600054610100900460ff1615801561096e576000805460ff1961ff0019909116610100171660011790555b610976610d9a565b609980546001600160a01b038088166001600160a01b03199283161792839055609a8054888316931692909217918290556040805163e6a4390560e01b81529282166004840152928116602483015291519185169163e6a4390591604480820192602092909190829003018186803b1580156109f157600080fd5b505afa158015610a05573d6000803e3d6000fd5b505050506040513d6020811015610a1b57600080fd5b5051609780546001600160a01b0319166001600160a01b03909216919091179055609b805460ff60a01b1916600560a11b179055609d805460ff19166001908117909155610a6a908390610d69565b609754610a81906001600160a01b03166001610d69565b610a89610aaa565b505061138860a1558015610aa3576000805461ff00191690555b5050505050565b6000806000609760009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610afd57600080fd5b505afa158015610b11573d6000803e3d6000fd5b505050506040513d6020811015610b2757600080fd5b5051609c805490829055609a54609754604080516370a0823160e01b81526001600160a01b039283166004820152905193851096509394506000939116916370a0823191602480820192602092909190829003018186803b158015610b8b57600080fd5b505afa158015610b9f573d6000803e3d6000fd5b505050506040513d6020811015610bb557600080fd5b5051609954609754604080516370a0823160e01b81526001600160a01b039283166004820152905193945060009391909216916370a08231916024808301926020929190829003018186803b158015610c0d57600080fd5b505afa158015610c21573d6000803e3d6000fd5b505050506040513d6020811015610c3757600080fd5b5051609e5490915081118015610c6c575060a154610c6990610c609066038d7ea4c68000610c83565b609f5490610e4c565b82115b609e91909155609f919091559391925050565b3390565b600082610c9257506000610cdf565b82820282848281610c9f57fe5b0414610cdc5760405162461bcd60e51b81526004018080602001828103825260218152602001806111626021913960400191505060405180910390fd5b90505b92915050565b6000610cdc83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610ea6565b6000610cdc83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f48565b6001600160a01b0391909116600090815260a060205260409020805460ff1916911515919091179055565b303b1590565b600054610100900460ff1680610db35750610db3610d94565b80610dc1575060005460ff16155b610dfc5760405162461bcd60e51b815260040180806020018281038252602e8152602001806111a3602e913960400191505060405180910390fd5b600054610100900460ff16158015610e27576000805460ff1961ff0019909116610100171660011790555b610e2f610fa2565b610e37611042565b8015610e49576000805461ff00191690555b50565b600082820183811015610cdc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008183610f325760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ef7578181015183820152602001610edf565b50505050905090810190601f168015610f245780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610f3e57fe5b0495945050505050565b60008184841115610f9a5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610ef7578181015183820152602001610edf565b505050900390565b600054610100900460ff1680610fbb5750610fbb610d94565b80610fc9575060005460ff16155b6110045760405162461bcd60e51b815260040180806020018281038252602e8152602001806111a3602e913960400191505060405180910390fd5b600054610100900460ff16158015610e37576000805460ff1961ff0019909116610100171660011790558015610e49576000805461ff001916905550565b600054610100900460ff168061105b575061105b610d94565b80611069575060005460ff16155b6110a45760405162461bcd60e51b815260040180806020018281038252602e8152602001806111a3602e913960400191505060405180910390fd5b600054610100900460ff161580156110cf576000805460ff1961ff0019909116610100171660011790555b60006110d9610c7f565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610e49576000805461ff00191690555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a264697066735822122012511d540d430da4106b2dd8287443bbaced523af39345aa0e24763402b547ad64736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 195,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 198,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 263,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "______gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 188,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 565,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "_owner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 683,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 5872,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "tokenUniswapPair",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 5874,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "uniswapFactory",
        "offset": 0,
        "slot": "152",
        "type": "t_contract(IUniswapV2Factory)4625"
      },
      {
        "astId": 5876,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "ramTokenAddress",
        "offset": 0,
        "slot": "153",
        "type": "t_address"
      },
      {
        "astId": 5878,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "ygyTokenAddress",
        "offset": 0,
        "slot": "154",
        "type": "t_address"
      },
      {
        "astId": 5880,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "ramVaultAddress",
        "offset": 0,
        "slot": "155",
        "type": "t_address"
      },
      {
        "astId": 5882,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "feePercentX100",
        "offset": 20,
        "slot": "155",
        "type": "t_uint8"
      },
      {
        "astId": 5884,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "lastTotalSupplyOfLPTokens",
        "offset": 0,
        "slot": "156",
        "type": "t_uint256"
      },
      {
        "astId": 5886,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "paused",
        "offset": 0,
        "slot": "157",
        "type": "t_bool"
      },
      {
        "astId": 5888,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "lastSupplyOfRamInPair",
        "offset": 0,
        "slot": "158",
        "type": "t_uint256"
      },
      {
        "astId": 5890,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "lastSupplyOfYgyInPair",
        "offset": 0,
        "slot": "159",
        "type": "t_uint256"
      },
      {
        "astId": 5894,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "noFeeList",
        "offset": 0,
        "slot": "160",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5970,
        "contract": "contracts/FeeApprover.sol:FeeApprover",
        "label": "minFinney",
        "offset": 0,
        "slot": "161",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IUniswapV2Factory)4625": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Factory",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}