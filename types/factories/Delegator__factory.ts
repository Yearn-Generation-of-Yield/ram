/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Delegator } from "../Delegator";

export class Delegator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_implementation: string, overrides?: Overrides): Promise<Delegator> {
    return super.deploy(_implementation, overrides || {}) as Promise<Delegator>;
  }
  getDeployTransaction(
    _implementation: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_implementation, overrides || {});
  }
  attach(address: string): Delegator {
    return super.attach(address) as Delegator;
  }
  connect(signer: Signer): Delegator__factory {
    return super.connect(signer) as Delegator__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Delegator {
    return new Contract(address, _abi, signerOrProvider) as Delegator;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103a93803806103a98339818101604052602081101561003357600080fd5b5051600080546001600160a01b03199081163317909155600180546001600160a01b038085169190931617908190556040805180820190915260128152711a5b5c1b195b595b9d185d1a5bdb881cd95d60721b6020828101919091526100a6939192909116906100fb6100ac821b17901c565b5061018d565b61016882826040516024018080602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b838110156101005781810151838201526020016100e8565b50505050905090810190601f16801561012d5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b0390811663319af33360e01b1790915290945061016c1692505050565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b61020d8061019c6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630900f0101461003b57806313af403514610063575b600080fd5b6100616004803603602081101561005157600080fd5b50356001600160a01b0316610089565b005b6100616004803603602081101561007957600080fd5b50356001600160a01b03166100c2565b6000546001600160a01b031633146100a057600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146100d957600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6101b282826040516024018080602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b8381101561014f578181015183820152602001610137565b50505050905090810190601f16801561017c5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905293506101b692505050565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa505050505056fea26469706673582212203ad3981157b11a810cd27a91f51abbb383fdbda129878c5ac50b8a633b47712564736f6c634300060c0033";
